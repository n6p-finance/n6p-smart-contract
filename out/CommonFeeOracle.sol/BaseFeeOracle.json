{"abi":[{"type":"constructor","inputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"acceptGovernance","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"authorizedAddresses","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"baseFeeProvider","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"governance","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isCurrentBaseFeeAcceptable","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"manualBaseFeeBool","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"maxAcceptableBaseFee","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"pendingGovernance","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"setAuthorized","inputs":[{"name":"_target","type":"address","internalType":"address"},{"name":"_value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setBaseFeeProvider","inputs":[{"name":"_baseFeeProvider","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setManualBaseFeeBool","inputs":[{"name":"_manualBaseFeeBool","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setMaxAcceptableBaseFee","inputs":[{"name":"_maxAcceptableBaseFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setPendingGovernance","inputs":[{"name":"_governance","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"NewGovernance","inputs":[{"name":"governance","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"NewProvider","inputs":[{"name":"provider","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"UpdatedAuthorization","inputs":[{"name":"target","type":"address","indexed":true,"internalType":"address"},{"name":"authorized","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"UpdatedManualBaseFee","inputs":[{"name":"manualFee","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"UpdatedMaxBaseFee","inputs":[{"name":"baseFee","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x6080806040523461003557600280546001600160a01b031916331790556005805460ff191660011790556105d6908161003a8239f35b5f80fdfe6040608081526004361015610012575f80fd5b5f90813560e01c80630abb6035146103cf578063238efcbc14610368578063244edd79146102ff57806334a9e75c146102da5780633909e1ae1461027257806347003cb71461024b5780634f62fb86146102285780635aa6e67514610200578063711bf9b21461017f578063bf95ab4914610161578063e10efcdd14610113578063f19e207e146100d65763f39c38a0146100ab575f80fd5b346100d257816003193601126100d25760035490516001600160a01b039091168152602090f35b5080fd5b50346100d25760203660031901126100d25760209160ff9082906001600160a01b03610100610414565b1681526004855220541690519015158152f35b50346100d25760203660031901126100d25760207f7dcfcc373856c123e2e781d90a483279c6f026653a768c30832d6dc9f749a4af916004359061015561051e565b8160015551908152a180f35b50346100d257816003193601126100d2576020906001549051908152f35b50346100d257806003193601126100d257610198610414565b602435908115158092036101fc577f8d6437292b994fc738dc2a2d36adca80c5c3516dde0ca63fedcbb70101b21a31916020916101d3610559565b6001600160a01b031680865260048352848620805460ff191660ff84161790559351908152a280f35b8380fd5b50346100d257816003193601126100d25760025490516001600160a01b039091168152602090f35b50346100d257816003193601126100d25760209060ff6005541690519015158152f35b50346100d257816003193601126100d257905490516001600160a01b039091168152602090f35b50346100d25760203660031901126100d257600435908115158092036102d6577f182fa601a3bf72179118750b74939977b97571ddef8172b735bca99e693feca6916020916102bf61051e565b60ff196005541660ff83161760055551908152a180f35b8280fd5b50346100d257816003193601126100d2576020906102f661042e565b90519015158152f35b823461036557602036600319011261036557610319610414565b610321610559565b81546001600160a01b0319166001600160a01b039190911690811782557f3ac461748dd21b3c9c3faa9c85712c1a04cd3eebcfee2a026acaaa82b1094ec08280a280f35b80fd5b823461036557806003193601126103655761038e60018060a01b036003541633146104e4565b336bffffffffffffffffffffffff60a01b6002541617600255337f4f386975ea1c2f7cf1845b08bee00626fbb624ecad16254d63d9bb9ba86526de8280a280f35b8234610365576020366003190112610365576103e9610414565b6103f1610559565b60018060a01b03166bffffffffffffffffffffffff60a01b600354161760035580f35b600435906001600160a01b038216820361042a57565b5f80fd5b5f80546001600160a01b03168061044a57505060ff6005541690565b60206004916040519283809263250db73960e21b82525afa9182156104d857809261047a575b5050600154101590565b90915060203d81116104d1575b601f8101601f1916830167ffffffffffffffff8111848210176104bd576020918491604052810103126103655750515f80610470565b634e487b7160e01b83526041600452602483fd5b503d610487565b604051903d90823e3d90fd5b156104eb57565b60405162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b6044820152606490fd5b335f526004602052600160ff60405f2054161515148015610545575b610543906104e4565b565b506002546001600160a01b0316331461053a565b6002546001600160a01b0316330361056d57565b60405162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b6044820152606490fdfea2646970667358221220aaf0752b90e2b38bc308d746f3cf0e5ef6f02ecee7259cfffef6abb9583c9caf64736f6c63430008140033","sourceMap":"300:4416:2:-:0;;;;;;;1029:23;300:4416;;-1:-1:-1;;;;;;300:4416:2;1042:10;300:4416;;;1118:24;300:4416;;-1:-1:-1;;300:4416:2;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6040608081526004361015610012575f80fd5b5f90813560e01c80630abb6035146103cf578063238efcbc14610368578063244edd79146102ff57806334a9e75c146102da5780633909e1ae1461027257806347003cb71461024b5780634f62fb86146102285780635aa6e67514610200578063711bf9b21461017f578063bf95ab4914610161578063e10efcdd14610113578063f19e207e146100d65763f39c38a0146100ab575f80fd5b346100d257816003193601126100d25760035490516001600160a01b039091168152602090f35b5080fd5b50346100d25760203660031901126100d25760209160ff9082906001600160a01b03610100610414565b1681526004855220541690519015158152f35b50346100d25760203660031901126100d25760207f7dcfcc373856c123e2e781d90a483279c6f026653a768c30832d6dc9f749a4af916004359061015561051e565b8160015551908152a180f35b50346100d257816003193601126100d2576020906001549051908152f35b50346100d257806003193601126100d257610198610414565b602435908115158092036101fc577f8d6437292b994fc738dc2a2d36adca80c5c3516dde0ca63fedcbb70101b21a31916020916101d3610559565b6001600160a01b031680865260048352848620805460ff191660ff84161790559351908152a280f35b8380fd5b50346100d257816003193601126100d25760025490516001600160a01b039091168152602090f35b50346100d257816003193601126100d25760209060ff6005541690519015158152f35b50346100d257816003193601126100d257905490516001600160a01b039091168152602090f35b50346100d25760203660031901126100d257600435908115158092036102d6577f182fa601a3bf72179118750b74939977b97571ddef8172b735bca99e693feca6916020916102bf61051e565b60ff196005541660ff83161760055551908152a180f35b8280fd5b50346100d257816003193601126100d2576020906102f661042e565b90519015158152f35b823461036557602036600319011261036557610319610414565b610321610559565b81546001600160a01b0319166001600160a01b039190911690811782557f3ac461748dd21b3c9c3faa9c85712c1a04cd3eebcfee2a026acaaa82b1094ec08280a280f35b80fd5b823461036557806003193601126103655761038e60018060a01b036003541633146104e4565b336bffffffffffffffffffffffff60a01b6002541617600255337f4f386975ea1c2f7cf1845b08bee00626fbb624ecad16254d63d9bb9ba86526de8280a280f35b8234610365576020366003190112610365576103e9610414565b6103f1610559565b60018060a01b03166bffffffffffffffffffffffff60a01b600354161760035580f35b600435906001600160a01b038216820361042a57565b5f80fd5b5f80546001600160a01b03168061044a57505060ff6005541690565b60206004916040519283809263250db73960e21b82525afa9182156104d857809261047a575b5050600154101590565b90915060203d81116104d1575b601f8101601f1916830167ffffffffffffffff8111848210176104bd576020918491604052810103126103655750515f80610470565b634e487b7160e01b83526041600452602483fd5b503d610487565b604051903d90823e3d90fd5b156104eb57565b60405162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b6044820152606490fd5b335f526004602052600160ff60405f2054161515148015610545575b610543906104e4565b565b506002546001600160a01b0316331461053a565b6002546001600160a01b0316330361056d57565b60405162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b6044820152606490fdfea2646970667358221220aaf0752b90e2b38bc308d746f3cf0e5ef6f02ecee7259cfffef6abb9583c9caf64736f6c63430008140033","sourceMap":"300:4416:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;300:4416:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;;300:4416:2;;;;;;;;;;-1:-1:-1;;;;;300:4416:2;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;300:4416:2;;;;;2297:40;300:4416;;;2128:216;;;:::i;:::-;300:4416;;;;;;;2297:40;300:4416;;;;;;;;;;;;;;;;;453:35;300:4416;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;3287:37;3136:195;300:4416;3136:195;;;:::i;:::-;-1:-1:-1;;;;;300:4416:2;;;;;;;;;;;;-1:-1:-1;;300:4416:2;;;;;;;;;;;;3287:37;300:4416;;;;;;;;;;;;;;;;;;;549:25;300:4416;;;-1:-1:-1;;;;;300:4416:2;;;;;;;;;;;;;;;;;;;;;;;;890:29;300:4416;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;300:4416:2;;;;;;;;;;;;;;;-1:-1:-1;;300:4416:2;;;;;;;;;;;;;;;2807:40;2653:201;300:4416;2653:201;;;:::i;:::-;300:4416;;2754:38;300:4416;;;;;;2754:38;300:4416;;;;;2807:40;300:4416;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;300:4416:2;;;;;;:::i;:::-;4262:185;;:::i;:::-;300:4416;;-1:-1:-1;;;;;;300:4416:2;-1:-1:-1;;;;;300:4416:2;;;;;;;;;4411:29;300:4416;;4411:29;300:4416;;;;;;;;;;;;;;;;;;3901:55;300:4416;;;;;;;;3909:10;:31;3901:55;:::i;:::-;3909:10;300:4416;;;3966:23;300:4416;;;3966:23;300:4416;3909:10;4004:25;;;;300:4416;;;;;;;;;-1:-1:-1;;300:4416:2;;;;;;:::i;:::-;3531:135;;:::i;:::-;300:4416;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;300:4416:2;;;;;;:::o;:::-;;;;1563:308;1642:15;300:4416;;-1:-1:-1;;;;;300:4416:2;1642:29;300:4416;;;;;1694:17;300:4416;;1687:24;:::o;1638:227::-;1760:42;;300:4416;;;;;;;;;;1760:42;;;;;;;;;;;;;1638:227;300:4416;;;;-1:-1:-1;1823:31:2;1816:38;:::o;1760:42::-;;;;;;;;;;;300:4416;;;-1:-1:-1;;300:4416:2;;;;;;;;;;;;1760:42;300:4416;;;;;1760:42;;300:4416;;;;;;1760:42;;;;300:4416;-1:-1:-1;;;300:4416:2;;;1760:42;300:4416;;;;1760:42;;;;;;300:4416;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;300:4416:2;;;;;;;;;;;;-1:-1:-1;;;300:4416:2;;;;;;;4453:149;4532:10;-1:-1:-1;300:4416:2;4512:19;300:4416;;4547:4;300:4416;;-1:-1:-1;300:4416:2;;;;;4512:39;:67;;;;4453:149;4504:91;;;:::i;:::-;4453:149::o;4512:67::-;-1:-1:-1;4569:10:2;300:4416;-1:-1:-1;;;;;300:4416:2;4532:10;4555:24;4512:67;;4608:106;4681:10;300:4416;-1:-1:-1;;;;;300:4416:2;4667:10;:24;300:4416;;4608:106::o;300:4416::-;;;-1:-1:-1;;;300:4416:2;;;;;;;;;;;;-1:-1:-1;;;300:4416:2;;;;;;","linkReferences":{}},"methodIdentifiers":{"acceptGovernance()":"238efcbc","authorizedAddresses(address)":"f19e207e","baseFeeProvider()":"47003cb7","governance()":"5aa6e675","isCurrentBaseFeeAcceptable()":"34a9e75c","manualBaseFeeBool()":"4f62fb86","maxAcceptableBaseFee()":"bf95ab49","pendingGovernance()":"f39c38a0","setAuthorized(address,bool)":"711bf9b2","setBaseFeeProvider(address)":"244edd79","setManualBaseFeeBool(bool)":"3909e1ae","setMaxAcceptableBaseFee(uint256)":"e10efcdd","setPendingGovernance(address)":"0abb6035"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"}],\"name\":\"NewGovernance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"NewProvider\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"UpdatedAuthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"manualFee\",\"type\":\"bool\"}],\"name\":\"UpdatedManualBaseFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseFee\",\"type\":\"uint256\"}],\"name\":\"UpdatedMaxBaseFee\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseFeeProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isCurrentBaseFeeAcceptable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualBaseFeeBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxAcceptableBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGovernance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setAuthorized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baseFeeProvider\",\"type\":\"address\"}],\"name\":\"setBaseFeeProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_manualBaseFeeBool\",\"type\":\"bool\"}],\"name\":\"setManualBaseFeeBool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxAcceptableBaseFee\",\"type\":\"uint256\"}],\"name\":\"setMaxAcceptableBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"setPendingGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interprets the base fee from our base fee provider  contract to determine if a harvest is permissable. Version 0.1.0\",\"kind\":\"dev\",\"methods\":{\"acceptGovernance()\":{\"details\":\"Throws if the caller is not the pending caller.  Emits a `NewGovernance` event.\"},\"setAuthorized(address,bool)\":{\"details\":\"Throws if the caller is not current governance.\",\"params\":{\"_target\":\"The address to add/remove authorization for.\",\"_value\":\"Boolean to grant or revoke access.\"}},\"setBaseFeeProvider(address)\":{\"details\":\"Throws if the caller is not current governance.\",\"params\":{\"_baseFeeProvider\":\"The network's baseFeeProvider address\"}},\"setManualBaseFeeBool(bool)\":{\"details\":\"Throws if the caller is not authorized or gov.\",\"params\":{\"_manualBaseFeeBool\":\"Boolean to allow/block harvests if we don't  have a provider set up.\"}},\"setMaxAcceptableBaseFee(uint256)\":{\"details\":\"Throws if the caller is not authorized or gov.\",\"params\":{\"_maxAcceptableBaseFee\":\"The acceptable maximum price to pay in wei.\"}},\"setPendingGovernance(address)\":{\"details\":\"Throws if the caller is not current governance.\",\"params\":{\"_governance\":\"The next governance address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptGovernance()\":{\"notice\":\"Completes the 2nd phase of the governance transfer.\"},\"authorizedAddresses(address)\":{\"notice\":\"New address must be set by current gov and then accept to transfer power.\"},\"constructor\":{\"notice\":\"Use this if our network hasn't implemented the base fee method yet\"},\"governance()\":{\"notice\":\"Max acceptable base fee for the operation\"},\"isCurrentBaseFeeAcceptable()\":{\"notice\":\"Returns whether we should allow harvests based on current base fee.\"},\"manualBaseFeeBool()\":{\"notice\":\"Addresses that can set the max acceptable base fee\"},\"maxAcceptableBaseFee()\":{\"notice\":\"Provider to read current block's base fee. This will vary based on network.\"},\"pendingGovernance()\":{\"notice\":\"Governance can grant and revoke access to the setter\"},\"setAuthorized(address,bool)\":{\"notice\":\"Controls whether a non-gov address can adjust certain params.\"},\"setBaseFeeProvider(address)\":{\"notice\":\"Sets the address used to pull the current network base fee.\"},\"setManualBaseFeeBool(bool)\":{\"notice\":\"If we don't have a provider, then manually determine if true or not.  Useful in testing as well.\"},\"setMaxAcceptableBaseFee(uint256)\":{\"notice\":\"Set the maximum base fee we want for our keepers to accept.  Gwei is 1e9.\"},\"setPendingGovernance(address)\":{\"notice\":\"Starts the 1st phase of the governance transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/CommonFeeOracle.sol\":\"BaseFeeOracle\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/src/CommonFeeOracle.sol\":{\"keccak256\":\"0x768fe9f7dc8f525022128a48c663c6ad6742be2a77c3f745525d42b49cc19592\",\"license\":\"MIT OR AGPL-3.0\",\"urls\":[\"bzz-raw://8cc3a9a3931b11a301b4835e22b430ede48fa06a1c536d059d10ea765e7aa82e\",\"dweb:/ipfs/QmT2P8ADP4UJ21evEi7NfAm8Jd3DAZNBGyVigm3FNzBvkE\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"governance","type":"address","indexed":true}],"type":"event","name":"NewGovernance","anonymous":false},{"inputs":[{"internalType":"address","name":"provider","type":"address","indexed":true}],"type":"event","name":"NewProvider","anonymous":false},{"inputs":[{"internalType":"address","name":"target","type":"address","indexed":true},{"internalType":"bool","name":"authorized","type":"bool","indexed":false}],"type":"event","name":"UpdatedAuthorization","anonymous":false},{"inputs":[{"internalType":"bool","name":"manualFee","type":"bool","indexed":false}],"type":"event","name":"UpdatedManualBaseFee","anonymous":false},{"inputs":[{"internalType":"uint256","name":"baseFee","type":"uint256","indexed":false}],"type":"event","name":"UpdatedMaxBaseFee","anonymous":false},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"acceptGovernance"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"authorizedAddresses","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"baseFeeProvider","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"governance","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"isCurrentBaseFeeAcceptable","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"manualBaseFeeBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"maxAcceptableBaseFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"pendingGovernance","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_target","type":"address"},{"internalType":"bool","name":"_value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setAuthorized"},{"inputs":[{"internalType":"address","name":"_baseFeeProvider","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setBaseFeeProvider"},{"inputs":[{"internalType":"bool","name":"_manualBaseFeeBool","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setManualBaseFeeBool"},{"inputs":[{"internalType":"uint256","name":"_maxAcceptableBaseFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setMaxAcceptableBaseFee"},{"inputs":[{"internalType":"address","name":"_governance","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setPendingGovernance"}],"devdoc":{"kind":"dev","methods":{"acceptGovernance()":{"details":"Throws if the caller is not the pending caller.  Emits a `NewGovernance` event."},"setAuthorized(address,bool)":{"details":"Throws if the caller is not current governance.","params":{"_target":"The address to add/remove authorization for.","_value":"Boolean to grant or revoke access."}},"setBaseFeeProvider(address)":{"details":"Throws if the caller is not current governance.","params":{"_baseFeeProvider":"The network's baseFeeProvider address"}},"setManualBaseFeeBool(bool)":{"details":"Throws if the caller is not authorized or gov.","params":{"_manualBaseFeeBool":"Boolean to allow/block harvests if we don't  have a provider set up."}},"setMaxAcceptableBaseFee(uint256)":{"details":"Throws if the caller is not authorized or gov.","params":{"_maxAcceptableBaseFee":"The acceptable maximum price to pay in wei."}},"setPendingGovernance(address)":{"details":"Throws if the caller is not current governance.","params":{"_governance":"The next governance address"}}},"version":1},"userdoc":{"kind":"user","methods":{"acceptGovernance()":{"notice":"Completes the 2nd phase of the governance transfer."},"authorizedAddresses(address)":{"notice":"New address must be set by current gov and then accept to transfer power."},"constructor":{"notice":"Use this if our network hasn't implemented the base fee method yet"},"governance()":{"notice":"Max acceptable base fee for the operation"},"isCurrentBaseFeeAcceptable()":{"notice":"Returns whether we should allow harvests based on current base fee."},"manualBaseFeeBool()":{"notice":"Addresses that can set the max acceptable base fee"},"maxAcceptableBaseFee()":{"notice":"Provider to read current block's base fee. This will vary based on network."},"pendingGovernance()":{"notice":"Governance can grant and revoke access to the setter"},"setAuthorized(address,bool)":{"notice":"Controls whether a non-gov address can adjust certain params."},"setBaseFeeProvider(address)":{"notice":"Sets the address used to pull the current network base fee."},"setManualBaseFeeBool(bool)":{"notice":"If we don't have a provider, then manually determine if true or not.  Useful in testing as well."},"setMaxAcceptableBaseFee(uint256)":{"notice":"Set the maximum base fee we want for our keepers to accept.  Gwei is 1e9."},"setPendingGovernance(address)":{"notice":"Starts the 1st phase of the governance transfer."}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/src/CommonFeeOracle.sol":"BaseFeeOracle"},"evmVersion":"shanghai","libraries":{},"viaIR":true},"sources":{"contracts/src/CommonFeeOracle.sol":{"keccak256":"0x768fe9f7dc8f525022128a48c663c6ad6742be2a77c3f745525d42b49cc19592","urls":["bzz-raw://8cc3a9a3931b11a301b4835e22b430ede48fa06a1c536d059d10ea765e7aa82e","dweb:/ipfs/QmT2P8ADP4UJ21evEi7NfAm8Jd3DAZNBGyVigm3FNzBvkE"],"license":"MIT OR AGPL-3.0"}},"version":1},"id":2}