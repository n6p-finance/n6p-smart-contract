{"abi":[{"type":"constructor","inputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"acceptGovernance","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"authorizedAddresses","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"baseFeeProvider","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"governance","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isCurrentBaseFeeAcceptable","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"manualBaseFeeBool","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"maxAcceptableBaseFee","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"pendingGovernance","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"setAuthorized","inputs":[{"name":"_target","type":"address","internalType":"address"},{"name":"_value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setBaseFeeProvider","inputs":[{"name":"_baseFeeProvider","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setManualBaseFeeBool","inputs":[{"name":"_manualBaseFeeBool","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setMaxAcceptableBaseFee","inputs":[{"name":"_maxAcceptableBaseFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setPendingGovernance","inputs":[{"name":"_governance","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"NewGovernance","inputs":[{"name":"governance","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"NewProvider","inputs":[{"name":"provider","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"UpdatedAuthorization","inputs":[{"name":"target","type":"address","indexed":true,"internalType":"address"},{"name":"authorized","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"UpdatedManualBaseFee","inputs":[{"name":"manualFee","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"UpdatedMaxBaseFee","inputs":[{"name":"baseFee","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x608060405234801561000f575f80fd5b50600280546001600160a01b031916331790556005805460ff191660011790556106248061003c5f395ff3fe608060405234801561000f575f80fd5b50600436106100cb575f3560e01c80634f62fb8611610088578063bf95ab4911610063578063bf95ab491461018c578063e10efcdd146101a3578063f19e207e146101b6578063f39c38a0146101d8575f80fd5b80634f62fb86146101595780635aa6e67514610166578063711bf9b214610179575f80fd5b80630abb6035146100cf578063238efcbc146100e4578063244edd79146100ec57806334a9e75c146100ff5780633909e1ae1461011c57806347003cb71461012f575b5f80fd5b6100e26100dd366004610547565b6101eb565b005b6100e2610215565b6100e26100fa366004610547565b6102a1565b6101076102f0565b60405190151581526020015b60405180910390f35b6100e261012a366004610576565b610389565b5f54610141906001600160a01b031681565b6040516001600160a01b039091168152602001610113565b6005546101079060ff1681565b600254610141906001600160a01b031681565b6100e261018736600461058f565b6103d9565b61019560015481565b604051908152602001610113565b6100e26101b13660046105c0565b61043f565b6101076101c4366004610547565b60046020525f908152604090205460ff1681565b600354610141906001600160a01b031681565b6101f361047c565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031633146102625760405162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b60448201526064015b60405180910390fd5b600280546001600160a01b031916339081179091556040517f4f386975ea1c2f7cf1845b08bee00626fbb624ecad16254d63d9bb9ba86526de905f90a2565b6102a961047c565b5f80546001600160a01b0319166001600160a01b038316908117825560405190917f3ac461748dd21b3c9c3faa9c85712c1a04cd3eebcfee2a026acaaa82b1094ec091a250565b5f80546001600160a01b031661030a575060055460ff1690565b5f805f9054906101000a90046001600160a01b03166001600160a01b0316639436dce46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561035a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061037e91906105d7565b600154101592915050565b6103916104c6565b6005805460ff19168215159081179091556040519081527f182fa601a3bf72179118750b74939977b97571ddef8172b735bca99e693feca6906020015b60405180910390a150565b6103e161047c565b6001600160a01b0382165f81815260046020908152604091829020805460ff191685151590811790915591519182527f8d6437292b994fc738dc2a2d36adca80c5c3516dde0ca63fedcbb70101b21a31910160405180910390a25050565b6104476104c6565b60018190556040518181527f7dcfcc373856c123e2e781d90a483279c6f026653a768c30832d6dc9f749a4af906020016103ce565b6002546001600160a01b031633146104c45760405162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b6044820152606401610259565b565b335f9081526004602052604090205460ff161515600114806104f257506002546001600160a01b031633145b6104c45760405162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b6044820152606401610259565b80356001600160a01b0381168114610542575f80fd5b919050565b5f60208284031215610557575f80fd5b6105608261052c565b9392505050565b80358015158114610542575f80fd5b5f60208284031215610586575f80fd5b61056082610567565b5f80604083850312156105a0575f80fd5b6105a98361052c565b91506105b760208401610567565b90509250929050565b5f602082840312156105d0575f80fd5b5035919050565b5f602082840312156105e7575f80fd5b505191905056fea2646970667358221220d1dd9f7056ca111969d089b4f3ce905d6605ea73589051d840035bcf888ca7c164736f6c63430008140033","sourceMap":"300:4416:1:-:0;;;1005:167;;;;;;;;;-1:-1:-1;1029:10:1;:23;;-1:-1:-1;;;;;;1029:23:1;1042:10;1029:23;;;1118:17;:24;;-1:-1:-1;;1118:24:1;1029:23;1118:24;;;300:4416;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561000f575f80fd5b50600436106100cb575f3560e01c80634f62fb8611610088578063bf95ab4911610063578063bf95ab491461018c578063e10efcdd146101a3578063f19e207e146101b6578063f39c38a0146101d8575f80fd5b80634f62fb86146101595780635aa6e67514610166578063711bf9b214610179575f80fd5b80630abb6035146100cf578063238efcbc146100e4578063244edd79146100ec57806334a9e75c146100ff5780633909e1ae1461011c57806347003cb71461012f575b5f80fd5b6100e26100dd366004610547565b6101eb565b005b6100e2610215565b6100e26100fa366004610547565b6102a1565b6101076102f0565b60405190151581526020015b60405180910390f35b6100e261012a366004610576565b610389565b5f54610141906001600160a01b031681565b6040516001600160a01b039091168152602001610113565b6005546101079060ff1681565b600254610141906001600160a01b031681565b6100e261018736600461058f565b6103d9565b61019560015481565b604051908152602001610113565b6100e26101b13660046105c0565b61043f565b6101076101c4366004610547565b60046020525f908152604090205460ff1681565b600354610141906001600160a01b031681565b6101f361047c565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031633146102625760405162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b60448201526064015b60405180910390fd5b600280546001600160a01b031916339081179091556040517f4f386975ea1c2f7cf1845b08bee00626fbb624ecad16254d63d9bb9ba86526de905f90a2565b6102a961047c565b5f80546001600160a01b0319166001600160a01b038316908117825560405190917f3ac461748dd21b3c9c3faa9c85712c1a04cd3eebcfee2a026acaaa82b1094ec091a250565b5f80546001600160a01b031661030a575060055460ff1690565b5f805f9054906101000a90046001600160a01b03166001600160a01b0316639436dce46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561035a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061037e91906105d7565b600154101592915050565b6103916104c6565b6005805460ff19168215159081179091556040519081527f182fa601a3bf72179118750b74939977b97571ddef8172b735bca99e693feca6906020015b60405180910390a150565b6103e161047c565b6001600160a01b0382165f81815260046020908152604091829020805460ff191685151590811790915591519182527f8d6437292b994fc738dc2a2d36adca80c5c3516dde0ca63fedcbb70101b21a31910160405180910390a25050565b6104476104c6565b60018190556040518181527f7dcfcc373856c123e2e781d90a483279c6f026653a768c30832d6dc9f749a4af906020016103ce565b6002546001600160a01b031633146104c45760405162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b6044820152606401610259565b565b335f9081526004602052604090205460ff161515600114806104f257506002546001600160a01b031633145b6104c45760405162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b6044820152606401610259565b80356001600160a01b0381168114610542575f80fd5b919050565b5f60208284031215610557575f80fd5b6105608261052c565b9392505050565b80358015158114610542575f80fd5b5f60208284031215610586575f80fd5b61056082610567565b5f80604083850312156105a0575f80fd5b6105a98361052c565b91506105b760208401610567565b90509250929050565b5f602082840312156105d0575f80fd5b5035919050565b5f602082840312156105e7575f80fd5b505191905056fea2646970667358221220d1dd9f7056ca111969d089b4f3ce905d6605ea73589051d840035bcf888ca7c164736f6c63430008140033","sourceMap":"300:4416:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3531:135;;;;;;:::i;:::-;;:::i;:::-;;3854:182;;;:::i;4262:185::-;;;;;;:::i;:::-;;:::i;1563:308::-;;;:::i;:::-;;;548:14:70;;541:22;523:41;;511:2;496:18;1563:308:1;;;;;;;;2653:201;;;;;;:::i;:::-;;:::i;329:30::-;;;;;-1:-1:-1;;;;;329:30:1;;;;;;-1:-1:-1;;;;;1089:32:70;;;1071:51;;1059:2;1044:18;329:30:1;925:203:70;890:29:1;;;;;;;;;549:25;;;;;-1:-1:-1;;;;;549:25:1;;;3136:195;;;;;;:::i;:::-;;:::i;453:35::-;;;;;;;;;1538:25:70;;;1526:2;1511:18;453:35:1;1392:177:70;2128:216:1;;;;;;:::i;:::-;;:::i;769:51::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;645:32;;;;;-1:-1:-1;;;;;645:32:1;;;3531:135;3601:17;:15;:17::i;:::-;3628;:31;;-1:-1:-1;;;;;;3628:31:1;-1:-1:-1;;;;;3628:31:1;;;;;;;;;;3531:135::o;3854:182::-;3923:17;;-1:-1:-1;;;;;3923:17:1;3909:10;:31;3901:55;;;;-1:-1:-1;;;3901:55:1;;1961:2:70;3901:55:1;;;1943:21:70;2000:2;1980:18;;;1973:30;-1:-1:-1;;;2019:18:70;;;2012:41;2070:18;;3901:55:1;;;;;;;;;3966:10;:23;;-1:-1:-1;;;;;;3966:23:1;3979:10;3966:23;;;;;;4004:25;;;;3966:10;;4004:25;3854:182::o;4262:185::-;4335:17;:15;:17::i;:::-;4362:15;:34;;-1:-1:-1;;;;;;4362:34:1;-1:-1:-1;;;;;4362:34:1;;;;;;;4411:29;;4362:34;;4411:29;;;4262:185;:::o;1563:308::-;1622:4;1642:15;;-1:-1:-1;;;;;1642:15:1;1638:227;;-1:-1:-1;1694:17:1;;;;;1563:308::o;1638:227::-;1742:15;1769;;;;;;;;;-1:-1:-1;;;;;1769:15:1;-1:-1:-1;;;;;1760:40:1;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1834:20;;-1:-1:-1;1823:31:1;;1563:308;-1:-1:-1;;1563:308:1:o;2653:201::-;2727:17;:15;:17::i;:::-;2754;:38;;-1:-1:-1;;2754:38:1;;;;;;;;;;2807:40;;523:41:70;;;2807:40:1;;511:2:70;496:18;2807:40:1;;;;;;;;2653:201;:::o;3136:195::-;3208:17;:15;:17::i;:::-;-1:-1:-1;;;;;3235:28:1;;;;;;:19;:28;;;;;;;;;:37;;-1:-1:-1;;3235:37:1;;;;;;;;;;3287;;523:41:70;;;3287:37:1;;496:18:70;3287:37:1;;;;;;;3136:195;;:::o;2128:216::-;2211:17;:15;:17::i;:::-;2238:20;:44;;;2297:40;;1538:25:70;;;2297:40:1;;1526:2:70;1511:18;2297:40:1;1392:177:70;4608:106:1;4681:10;;-1:-1:-1;;;;;4681:10:1;4667;:24;4659:48;;;;-1:-1:-1;;;4659:48:1;;2490:2:70;4659:48:1;;;2472:21:70;2529:2;2509:18;;;2502:30;-1:-1:-1;;;2548:18:70;;;2541:41;2599:18;;4659:48:1;2288:335:70;4659:48:1;4608:106::o;4453:149::-;4532:10;4512:31;;;;:19;:31;;;;;;;;:39;;:31;:39;;:67;;-1:-1:-1;4569:10:1;;-1:-1:-1;;;;;4569:10:1;4555;:24;4512:67;4504:91;;;;-1:-1:-1;;;4504:91:1;;1961:2:70;4504:91:1;;;1943:21:70;2000:2;1980:18;;;1973:30;-1:-1:-1;;;2019:18:70;;;2012:41;2070:18;;4504:91:1;1759:335:70;14:173;82:20;;-1:-1:-1;;;;;131:31:70;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:70:o;575:160::-;640:20;;696:13;;689:21;679:32;;669:60;;725:1;722;715:12;740:180;796:6;849:2;837:9;828:7;824:23;820:32;817:52;;;865:1;862;855:12;817:52;888:26;904:9;888:26;:::i;1133:254::-;1198:6;1206;1259:2;1247:9;1238:7;1234:23;1230:32;1227:52;;;1275:1;1272;1265:12;1227:52;1298:29;1317:9;1298:29;:::i;:::-;1288:39;;1346:35;1377:2;1366:9;1362:18;1346:35;:::i;:::-;1336:45;;1133:254;;;;;:::o;1574:180::-;1633:6;1686:2;1674:9;1665:7;1661:23;1657:32;1654:52;;;1702:1;1699;1692:12;1654:52;-1:-1:-1;1725:23:70;;1574:180;-1:-1:-1;1574:180:70:o;2099:184::-;2169:6;2222:2;2210:9;2201:7;2197:23;2193:32;2190:52;;;2238:1;2235;2228:12;2190:52;-1:-1:-1;2261:16:70;;2099:184;-1:-1:-1;2099:184:70:o","linkReferences":{}},"methodIdentifiers":{"acceptGovernance()":"238efcbc","authorizedAddresses(address)":"f19e207e","baseFeeProvider()":"47003cb7","governance()":"5aa6e675","isCurrentBaseFeeAcceptable()":"34a9e75c","manualBaseFeeBool()":"4f62fb86","maxAcceptableBaseFee()":"bf95ab49","pendingGovernance()":"f39c38a0","setAuthorized(address,bool)":"711bf9b2","setBaseFeeProvider(address)":"244edd79","setManualBaseFeeBool(bool)":"3909e1ae","setMaxAcceptableBaseFee(uint256)":"e10efcdd","setPendingGovernance(address)":"0abb6035"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"}],\"name\":\"NewGovernance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"NewProvider\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"UpdatedAuthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"manualFee\",\"type\":\"bool\"}],\"name\":\"UpdatedManualBaseFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseFee\",\"type\":\"uint256\"}],\"name\":\"UpdatedMaxBaseFee\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseFeeProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isCurrentBaseFeeAcceptable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualBaseFeeBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxAcceptableBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGovernance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setAuthorized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baseFeeProvider\",\"type\":\"address\"}],\"name\":\"setBaseFeeProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_manualBaseFeeBool\",\"type\":\"bool\"}],\"name\":\"setManualBaseFeeBool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxAcceptableBaseFee\",\"type\":\"uint256\"}],\"name\":\"setMaxAcceptableBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"setPendingGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interprets the base fee from our base fee provider  contract to determine if a harvest is permissable. Version 0.1.0\",\"kind\":\"dev\",\"methods\":{\"acceptGovernance()\":{\"details\":\"Throws if the caller is not the pending caller.  Emits a `NewGovernance` event.\"},\"setAuthorized(address,bool)\":{\"details\":\"Throws if the caller is not current governance.\",\"params\":{\"_target\":\"The address to add/remove authorization for.\",\"_value\":\"Boolean to grant or revoke access.\"}},\"setBaseFeeProvider(address)\":{\"details\":\"Throws if the caller is not current governance.\",\"params\":{\"_baseFeeProvider\":\"The network's baseFeeProvider address\"}},\"setManualBaseFeeBool(bool)\":{\"details\":\"Throws if the caller is not authorized or gov.\",\"params\":{\"_manualBaseFeeBool\":\"Boolean to allow/block harvests if we don't  have a provider set up.\"}},\"setMaxAcceptableBaseFee(uint256)\":{\"details\":\"Throws if the caller is not authorized or gov.\",\"params\":{\"_maxAcceptableBaseFee\":\"The acceptable maximum price to pay in wei.\"}},\"setPendingGovernance(address)\":{\"details\":\"Throws if the caller is not current governance.\",\"params\":{\"_governance\":\"The next governance address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptGovernance()\":{\"notice\":\"Completes the 2nd phase of the governance transfer.\"},\"authorizedAddresses(address)\":{\"notice\":\"New address must be set by current gov and then accept to transfer power.\"},\"constructor\":{\"notice\":\"Use this if our network hasn't implemented the base fee method yet\"},\"governance()\":{\"notice\":\"Max acceptable base fee for the operation\"},\"isCurrentBaseFeeAcceptable()\":{\"notice\":\"Returns whether we should allow harvests based on current base fee.\"},\"manualBaseFeeBool()\":{\"notice\":\"Addresses that can set the max acceptable base fee\"},\"maxAcceptableBaseFee()\":{\"notice\":\"Provider to read current block's base fee. This will vary based on network.\"},\"pendingGovernance()\":{\"notice\":\"Governance can grant and revoke access to the setter\"},\"setAuthorized(address,bool)\":{\"notice\":\"Controls whether a non-gov address can adjust certain params.\"},\"setBaseFeeProvider(address)\":{\"notice\":\"Sets the address used to pull the current network base fee.\"},\"setManualBaseFeeBool(bool)\":{\"notice\":\"If we don't have a provider, then manually determine if true or not.  Useful in testing as well.\"},\"setMaxAcceptableBaseFee(uint256)\":{\"notice\":\"Set the maximum base fee we want for our keepers to accept.  Gwei is 1e9.\"},\"setPendingGovernance(address)\":{\"notice\":\"Starts the 1st phase of the governance transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/CommonFeeOracle.sol\":\"BaseFeeOracle\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/src/CommonFeeOracle.sol\":{\"keccak256\":\"0x768fe9f7dc8f525022128a48c663c6ad6742be2a77c3f745525d42b49cc19592\",\"license\":\"MIT OR AGPL-3.0\",\"urls\":[\"bzz-raw://8cc3a9a3931b11a301b4835e22b430ede48fa06a1c536d059d10ea765e7aa82e\",\"dweb:/ipfs/QmT2P8ADP4UJ21evEi7NfAm8Jd3DAZNBGyVigm3FNzBvkE\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"governance","type":"address","indexed":true}],"type":"event","name":"NewGovernance","anonymous":false},{"inputs":[{"internalType":"address","name":"provider","type":"address","indexed":true}],"type":"event","name":"NewProvider","anonymous":false},{"inputs":[{"internalType":"address","name":"target","type":"address","indexed":true},{"internalType":"bool","name":"authorized","type":"bool","indexed":false}],"type":"event","name":"UpdatedAuthorization","anonymous":false},{"inputs":[{"internalType":"bool","name":"manualFee","type":"bool","indexed":false}],"type":"event","name":"UpdatedManualBaseFee","anonymous":false},{"inputs":[{"internalType":"uint256","name":"baseFee","type":"uint256","indexed":false}],"type":"event","name":"UpdatedMaxBaseFee","anonymous":false},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"acceptGovernance"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"authorizedAddresses","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"baseFeeProvider","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"governance","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"isCurrentBaseFeeAcceptable","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"manualBaseFeeBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"maxAcceptableBaseFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"pendingGovernance","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_target","type":"address"},{"internalType":"bool","name":"_value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setAuthorized"},{"inputs":[{"internalType":"address","name":"_baseFeeProvider","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setBaseFeeProvider"},{"inputs":[{"internalType":"bool","name":"_manualBaseFeeBool","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setManualBaseFeeBool"},{"inputs":[{"internalType":"uint256","name":"_maxAcceptableBaseFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setMaxAcceptableBaseFee"},{"inputs":[{"internalType":"address","name":"_governance","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setPendingGovernance"}],"devdoc":{"kind":"dev","methods":{"acceptGovernance()":{"details":"Throws if the caller is not the pending caller.  Emits a `NewGovernance` event."},"setAuthorized(address,bool)":{"details":"Throws if the caller is not current governance.","params":{"_target":"The address to add/remove authorization for.","_value":"Boolean to grant or revoke access."}},"setBaseFeeProvider(address)":{"details":"Throws if the caller is not current governance.","params":{"_baseFeeProvider":"The network's baseFeeProvider address"}},"setManualBaseFeeBool(bool)":{"details":"Throws if the caller is not authorized or gov.","params":{"_manualBaseFeeBool":"Boolean to allow/block harvests if we don't  have a provider set up."}},"setMaxAcceptableBaseFee(uint256)":{"details":"Throws if the caller is not authorized or gov.","params":{"_maxAcceptableBaseFee":"The acceptable maximum price to pay in wei."}},"setPendingGovernance(address)":{"details":"Throws if the caller is not current governance.","params":{"_governance":"The next governance address"}}},"version":1},"userdoc":{"kind":"user","methods":{"acceptGovernance()":{"notice":"Completes the 2nd phase of the governance transfer."},"authorizedAddresses(address)":{"notice":"New address must be set by current gov and then accept to transfer power."},"constructor":{"notice":"Use this if our network hasn't implemented the base fee method yet"},"governance()":{"notice":"Max acceptable base fee for the operation"},"isCurrentBaseFeeAcceptable()":{"notice":"Returns whether we should allow harvests based on current base fee."},"manualBaseFeeBool()":{"notice":"Addresses that can set the max acceptable base fee"},"maxAcceptableBaseFee()":{"notice":"Provider to read current block's base fee. This will vary based on network."},"pendingGovernance()":{"notice":"Governance can grant and revoke access to the setter"},"setAuthorized(address,bool)":{"notice":"Controls whether a non-gov address can adjust certain params."},"setBaseFeeProvider(address)":{"notice":"Sets the address used to pull the current network base fee."},"setManualBaseFeeBool(bool)":{"notice":"If we don't have a provider, then manually determine if true or not.  Useful in testing as well."},"setMaxAcceptableBaseFee(uint256)":{"notice":"Set the maximum base fee we want for our keepers to accept.  Gwei is 1e9."},"setPendingGovernance(address)":{"notice":"Starts the 1st phase of the governance transfer."}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/src/CommonFeeOracle.sol":"BaseFeeOracle"},"evmVersion":"shanghai","libraries":{}},"sources":{"contracts/src/CommonFeeOracle.sol":{"keccak256":"0x768fe9f7dc8f525022128a48c663c6ad6742be2a77c3f745525d42b49cc19592","urls":["bzz-raw://8cc3a9a3931b11a301b4835e22b430ede48fa06a1c536d059d10ea765e7aa82e","dweb:/ipfs/QmT2P8ADP4UJ21evEi7NfAm8Jd3DAZNBGyVigm3FNzBvkE"],"license":"MIT OR AGPL-3.0"}},"version":1},"id":1}